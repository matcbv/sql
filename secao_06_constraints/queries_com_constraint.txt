Constraints

Constraints são regras que determinam como será feito o preenchimento das células de uma tabela. São responsáveis por organizar e padronizar nosso projeto.


NOT NULL - Faz com que determinada coluna não aceite valores nulos. Ex.:
	
	CREATE TABLE <table_name> (<column_name> <data_type> NOT NULL) VALUES (<value>);

Obs.: Uma string vazia não é considerada nula pelo SQL. Para indicarmos um valor nulo, devemos utilizar a palavra-chave NULL ou omitir determinado valor ao inserir dados na tabela.


UNIQUE - Faz com que os valores de determinada coluna sejam únicos. Ex.:

	CREATE TABLE <table_name> (<column_name> <data_type> UNIQUE) VALUES (<value>);


PRIMARY KEY - Faz com que determinada coluna contenha os ID's de determinada tabela.

	CREATE TABLE <table_name> (id INT PRIMARY KEY) VALUES (<value>);

	Outra opção é:

	CREATE TABLE <table_name> (id INT, <column_name> <data_type>, PRIMARY KEY (id)) VALUES (<value>);

	Obs.: A coluna de ID não aceita valores nulos ou duplicados.


AUTO INCREMENT - Faz com que determinada coluna seja autoincrementável. É muito utilizado com PRIMARY KEY, para gerar diferentes ID's para cada produto. Ex.:

	CREATE TABLE <table_name> (id INT PRIMARY KEY AUTO INCREMENT) VALUES (<value>);


FOREIGN KEY - Faz a ligação de uma tabela a outra através de uma chave primária. Através dela, também conseguimos impedir a remoção de dados com ligação em outras tabelas. Ex.:

	CREATE TABLE <table_name> (id INT PRIMARY KEY AUTO_INCREMENT, <column_name> <data_type>, <main_table>_id INT FOREIGN KEY (<main_table>)) VALUES (<values>, ...);

Obs.: Só é possível adicionar uma chave estrangeira de valor já existente na tabela primária. Já para remover uma tabela primária, devemos remover antes a tabela estrangeira, que possui dados ligados a ela.


INDEX - Com 