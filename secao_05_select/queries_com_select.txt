Operadores a serem utilizado com o SELECT


Operadores de comparação:

- > (Maior)
- < (Menor)
- >= (Maior ou igual)
- <= (Menor ou igual)
- = (Igual)
- % (Padrão)

--------------- // ---------------

Operadores lógicos

AND: Recebe condições e retorna valores os quais atendem todas elas.

OR: Recebe condições e retorna valores os quais atendem ao menos uma delas.

NOT: Retorna valores os quais não atendam a condição recebida.

Obs.: Podems utilizar os operadores && e || para substituir AND e OR, porém não é tão comum por não ser amplamente suportada.

--------------- // ---------------

AS - Com o AS, criamos um ALIAS para determinada coluna em nossa tabela. Ex.:

	SELECT <column_name> AS <new_name> FROM <table_name>;

Obs.: Podemos também adicionar uma string como alias. Ex.:

	SELECT <column_name> AS "String Personalizada" FROM <table_name>;

--------------- // ---------------

BETWEEN: Retorna valores contidos em determinado intervalo. Ex.:

    SELECT * FROM <table_name> WHERE <column_name> BETWEEN <value> AND <value>;



LIKE: Retorna valores contidos em determinado padrão.

Ex.:

    SELECT * FROM <table_name> WHERE <column_name> LIKE <value>;

Ex. 2:

    SELECT * FROM <table_name> WHERE <column_name> LIKE '%value';

Obs.: Com %, conseguimos definir um padrão a ser seguido para busca de dados com SELECT, sendo muito utilizados em queries com LIKE. No exemplo acima, serão retornados todos os dados que contenham determinada string em seu conteúdo. Podemos selecionar as que começam ou terminam com tal string, inserindo % apenas no final, ou início, respectivamente.



IN: Retorna valores contidos em uma lista de valores. Ex.:

    SELECT * FROM <table_name> WHERE <column_name> IN (<value1>, <value2>, ...);



DISTINCT: Retorna apenas valores únicos em uma consulta, elimindando todas as duplicatas.

    SELECT * FROM <table_name> WHERE <column_name> DISTINCT;



ORDER BY: Ordena valores de acordo com colunas em forma ascendente (ASC) ou descendente (DESC). Ex.:

    SELECT * FROM <table_name> ORDER BY <column_name> DESC;

Obs.: Por padrão, a ordenação é feita de forma ascendente.



LIMIT: Limita o número de resultados em determinado inteiro. Ex.:

    SELECT <column_name> FROM <table_name> LIMIT <integer>;